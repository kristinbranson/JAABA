function trx = ConvertMouseTrx2Trx(intrxname,moviename,outtrxname,pxpermm,sex)

% load data
headerinfo = r_readseqinfo(moviename);
tmp = load(intrxname);

% count
nmice = numel(tmp.astrctTrackers);
nframes = numel(tmp.astrctTrackers(1).m_afX);

% create new structure
trx = struct('x',{tmp.astrctTrackers.m_afX},...
  'y',{tmp.astrctTrackers.m_afY},...
  'theta',cellfun(@(x) -x, {tmp.astrctTrackers.m_afTheta},'UniformOutput',false),...
  'a',cellfun(@(x) x/2,{tmp.astrctTrackers.m_afA},'UniformOutput',false),...
  'b',cellfun(@(x) x/2,{tmp.astrctTrackers.m_afB},'UniformOutput',false),...
  'firstframe',num2cell(ones(1,nmice)),...
  'arena',cell(1,nmice),...
  'off',num2cell(zeros(1,nmice)),...
  'nframes',num2cell(nframes(ones(1,nmice))),...
  'endframe',num2cell(nframes(ones(1,nmice))),...
  'timestamps',repmat({headerinfo.m_afTimestamp-headerinfo.m_afTimestamp(1)},[1,nmice]),...
  'moviename',repmat({moviename},[1,nmice]),...
  'annname',repmat({intrxname},[1,nmice]),...
  'matname',repmat({outtrxname},[1,nmice]),...
  'x_mm',cellfun(@(x) x/pxpermm,{tmp.astrctTrackers.m_afX},'UniformOutput',false),...
  'y_mm',cellfun(@(x) x/pxpermm,{tmp.astrctTrackers.m_afY},'UniformOutput',false),...
  'a_mm',cellfun(@(x) x/pxpermm/2,{tmp.astrctTrackers.m_afA},'UniformOutput',false),...
  'b_mm',cellfun(@(x) x/pxpermm/2,{tmp.astrctTrackers.m_afB},'UniformOutput',false),...
  'theta_mm',cellfun(@(x) -x, {tmp.astrctTrackers.m_afTheta},'UniformOutput',false),...
  'dt',repmat({diff(headerinfo.m_afTimestamp)},[1,nmice]),...
  'fps',repmat({1/median(diff(headerinfo.m_afTimestamp))},[1,nmice]),...
  'pxpermm',repmat({pxpermm},[1,nmice]),...
  'sex',sex);

% save to file
if ~isempty(outtrxname),
  save(outtrxname,'trx');
end