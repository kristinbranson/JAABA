classdef GrandlyUnify < handle
  properties
    projectFileName=''
      % The absolute path of the project file name to be converted.
    projectFileSpecified=false  
    classifierFileName=''  
      % The absolute path of the classifier file name to be converted.
    classifierFileSpecified=false  
    gtExpDirNames={}
      % The list of ground-truth experiment directories.  Absolute paths,
      % again.
    iCurrentGTExpDir=[]
      % The index of the currently selected GT experiment dir.  Empty
      % iff gtExpDirNames is empty.
    fig  % the figure handle
    projectFileLabelText
    projectFileText
    chooseProjectFileButton
    classifierFileLabelText
    classifierFileText
    chooseClassifierFileButton
    gtExpDirsLabelText
    gtExpDirsListbox
    gtExpDirsAddButton
    gtExpDirsRemoveButton
    %quitButton
    convertButton
  end
  methods
    function self=GrandlyUnify()
      % Set figure layout parameters
      figureWidth=730;
      figureHeight=274;

      sideButtonWidth=80;  % choose buttons, add/remove buttons
      sideButtonHeight=26;
      sideButtonOffsetWidth=20;  % side buttons are this far to the right of 
                                 % their parent text/listbox
      addRemoveInterButtonHeight=10;
      
      bottomButtonWidth=100;  % Convert and Quit are the bottom buttons
      bottomButtonHeight=30;
      %interBottomButtonWidth=20;
      
      centerColumnWidth=470;
      fileNameTextHeight=20;
      gtExpDirsListboxHeight=100;
      
      projectCenterLineYOffset=240;
      classifierCenterLineYOffset=200;
      gtTopLineYOffset=170;
      
      labelOffsetWidth=20;  % Labels are this far to the left of the 
                            % text/listbox that they label
      
      % Figure the placement of the figure, want it centered relative to
      % primary screen
      savedUnits=get(0,'units');
      set(0,'units','points');
      screenPosition=get(0,'screensize');
      set(0,'units',savedUnits);
      figureXOffset=screenPosition(1)+(screenPosition(3)-figureWidth )/2;
      figureYOffset=screenPosition(2)+(screenPosition(4)-figureHeight)/2;
      
      % Create the figure
      self.fig= ...
        figure('units','points', ...
               'position',[figureXOffset figureYOffset figureWidth figureHeight], ...
               'resize','off', ...
               'numbertitle','off', ...
               'menubar','none', ...
               'name','Grandly Unify', ...
               'windowstyle','normal');
%               'closeRequestFcn',@(g,e)(self.quitButtonPressed()), ...
      
      % make the labels, but make them invisible, so we can get their
      % extents
      self.projectFileLabelText= ...
        uicontrol('parent',self.fig, ...
                  'units','points', ...
                  'style','text', ...
                  'backgroundcolor',get(self.fig,'color'), ...
                  'string','Project File', ...
                  'HorizontalAlignment','right',...
                  'visible','off', ...
                  'fontsize',12);
      extent=get(self.projectFileLabelText,'extent');
      extentSize=extent(3:4);
      %projectFileLabelTextSize=extentSize+4;  % pad a little
      projectFileLabelTextSize=extentSize;
      
      self.classifierFileLabelText= ...
        uicontrol('parent',self.fig, ...
                  'units','points', ...
                  'style','text', ...
                  'backgroundcolor',get(self.fig,'color'), ...
                  'string','Classifier File', ...
                  'HorizontalAlignment','right',...
                  'visible','off', ...
                  'fontsize',12);
      extent=get(self.classifierFileLabelText,'extent');
      extentSize=extent(3:4);
      %classifierFileLabelTextSize=extentSize+4;  % pad a little
      classifierFileLabelTextSize=extentSize;

      self.gtExpDirsLabelText= ...
        uicontrol('parent',self.fig, ...
                  'units','points', ...
                  'style','text', ...
                  'backgroundcolor',get(self.fig,'color'), ...
                  'string',{'Ground-truth', ...
                            'Experiment', ...
                            'Directory Names'}, ...
                  'HorizontalAlignment','right',...
                  'visible','off', ...
                  'fontsize',12);
      extent=get(self.gtExpDirsLabelText,'extent');
      extentSize=extent(3:4);
      %gtExpDirsLabelTextSize=extentSize+4;  % pad a little
      gtExpDirsLabelTextSize=extentSize;
      
      % Calculate positions
      centerColumnXOffset=(figureWidth-centerColumnWidth)/2;
      projectFileTextXOffset=centerColumnXOffset;
      classifierFileTextXOffset=centerColumnXOffset;
      gtExpDirsListboxXOffset=centerColumnXOffset;
      
      sideButtonXOffset=centerColumnXOffset+centerColumnWidth+sideButtonOffsetWidth;
      chooseProjectFileButtonXOffset=sideButtonXOffset;
      chooseClassifierFileButtonXOffset=sideButtonXOffset;
      gtExpDirsAddButtonXOffset=sideButtonXOffset;
      gtExpDirsRemoveButtonXOffset=sideButtonXOffset;
      
      %bottomButtonRowWidth=bottomButtonWidth+interBottomButtonWidth+bottomButtonWidth;
      %bottomButtonRowWidth=bottomButtonWidth;
      convertButtonXOffset=(figureWidth-bottomButtonWidth)/2;
      %convertButtonXOffset=quitButtonXOffset+bottomButtonWidth+interBottomButtonWidth;
      projectFileLabelTextXOffset=centerColumnXOffset-labelOffsetWidth-projectFileLabelTextSize(1);
      classifierFileLabelTextXOffset=centerColumnXOffset-labelOffsetWidth-classifierFileLabelTextSize(1);
      gtExpDirsLabelTextXOffset=centerColumnXOffset-labelOffsetWidth-gtExpDirsLabelTextSize(1);

      projectFileLabelTextYOffset=projectCenterLineYOffset-projectFileLabelTextSize(2)/2;
      classifierFileLabelTextYOffset=classifierCenterLineYOffset-classifierFileLabelTextSize(2)/2;
      gtExpDirsLabelTextYOffset=gtTopLineYOffset-gtExpDirsLabelTextSize(2);
      
      projectFileTextYOffset=projectCenterLineYOffset-fileNameTextHeight/2;
      classifierFileTextYOffset=classifierCenterLineYOffset-fileNameTextHeight/2;
      gtExpDirsListboxYOffset=gtTopLineYOffset-gtExpDirsListboxHeight;
      
      chooseProjectFileButtonYOffset=projectCenterLineYOffset-sideButtonHeight/2;
      chooseClassifierFileButtonYOffset=classifierCenterLineYOffset-sideButtonHeight/2;
      gtExpDirsAddButtonYOffset=gtTopLineYOffset-sideButtonHeight;
      gtExpDirsRemoveButtonYOffset=gtTopLineYOffset-sideButtonHeight-addRemoveInterButtonHeight-sideButtonHeight;

      bottomAreaHeight=gtExpDirsListboxYOffset;  
        % The "bottom area" is the rectangular area below the listbox.  It
        % is as wide as the figure, and it's bottom edge is aligned with
        % with bottom edge of the figure.  The row of bottom buttons is
        % centered within this area.
      bottomButtonYOffset=(bottomAreaHeight-bottomButtonHeight)/2;  
        % for both Quit and Convert buttons

      projectFileTextWidth=centerColumnWidth;
      classifierFileTextWidth=centerColumnWidth;
      gtExpDirsListboxWidth=centerColumnWidth;      
        
      projectFileTextHeight=fileNameTextHeight;
      classifierFileTextHeight=fileNameTextHeight;
      
      
      % Position the labels, make them visible
      set(self.projectFileLabelText, ...
          'position',[projectFileLabelTextXOffset projectFileLabelTextYOffset projectFileLabelTextSize], ...
          'visible','on');
      set(self.classifierFileLabelText, ...
          'position',[classifierFileLabelTextXOffset classifierFileLabelTextYOffset classifierFileLabelTextSize], ...
          'visible','on');
      set(self.gtExpDirsLabelText, ...
          'position',[gtExpDirsLabelTextXOffset gtExpDirsLabelTextYOffset gtExpDirsLabelTextSize], ...
          'visible','on');
        
      % Create the non-label controls  
      self.projectFileText= ...
        uicontrol('parent',self.fig, ...
                  'style','text', ...
                  'backgroundcolor','w', ...
                  'HorizontalAlignment','left',...
                  'fontsize',12, ...
                  'units','points', ...
                  'position',[projectFileTextXOffset ...
                              projectFileTextYOffset ...
                              projectFileTextWidth ...
                              projectFileTextHeight]);
      self.classifierFileText= ...
        uicontrol('parent',self.fig, ...
                  'style','text', ...
                  'backgroundcolor','w', ...
                  'HorizontalAlignment','left',...
                  'fontsize',12, ...
                  'units','points', ...
                  'position',[classifierFileTextXOffset ...
                              classifierFileTextYOffset ...
                              classifierFileTextWidth ...
                              classifierFileTextHeight]);
      self.gtExpDirsListbox=...
        uicontrol('parent',self.fig, ...
                  'style','listbox', ...
                  'fontsize',12, ...
                  'units','points', ...
                  'position',[gtExpDirsListboxXOffset ...
                              gtExpDirsListboxYOffset ...
                              gtExpDirsListboxWidth ...
                              gtExpDirsListboxHeight]);
      self.chooseProjectFileButton= ...
        uicontrol('parent',self.fig, ...
                  'style','pushbutton', ...
                  'string','Choose', ...
                  'fontsize',12, ...
                  'units','points', ...
                  'position',[chooseProjectFileButtonXOffset ...
                              chooseProjectFileButtonYOffset ...
                              sideButtonWidth ...
                              sideButtonHeight], ...
                  'callback',@(g,e)(self.chooseProjectFileButtonPressed()));
      self.chooseClassifierFileButton= ...
        uicontrol('parent',self.fig, ...
                  'style','pushbutton', ...
                  'string','Choose', ...
                  'fontsize',12, ...
                  'units','points', ...
                  'position',[chooseClassifierFileButtonXOffset ...
                              chooseClassifierFileButtonYOffset ...
                              sideButtonWidth ...
                              sideButtonHeight], ...
                  'callback',@(g,e)(self.chooseClassifierFileButtonPressed()));
      self.gtExpDirsAddButton= ...
        uicontrol('parent',self.fig, ...
                  'style','pushbutton', ...
                  'string','Add', ...
                  'fontsize',12, ...
                  'units','points', ...
                  'position',[gtExpDirsAddButtonXOffset ...
                              gtExpDirsAddButtonYOffset ...
                              sideButtonWidth ...
                              sideButtonHeight], ...
                  'callback',@(g,e)(self.gtExpDirsAddButtonPressed()));
      self.gtExpDirsRemoveButton= ...
        uicontrol('parent',self.fig, ...
                  'style','pushbutton', ...
                  'string','Remove', ...
                  'fontsize',12, ...
                  'units','points', ...
                  'position',[gtExpDirsRemoveButtonXOffset ...
                              gtExpDirsRemoveButtonYOffset ...
                              sideButtonWidth ...
                              sideButtonHeight], ...
                  'callback',@(g,e)(self.gtExpDirsRemoveButtonPressed()));
%       self.quitButton= ...
%         uicontrol('parent',self.fig, ...
%                   'style','pushbutton', ...
%                   'string','Quit', ...
%                   'fontsize',12, ...
%                   'units','points', ...
%                   'position',[quitButtonXOffset ...
%                               bottomButtonYOffset ...
%                               bottomButtonWidth ...
%                               bottomButtonHeight], ...
%                   'callback',@(g,e)(self.quitButtonPressed()));
      self.convertButton= ...
        uicontrol('parent',self.fig, ...
                  'style','pushbutton', ...
                  'string','Convert', ...
                  'fontsize',12, ...
                  'units','points', ...
                  'position',[convertButtonXOffset ...
                              bottomButtonYOffset ...
                              bottomButtonWidth ...
                              bottomButtonHeight], ...
                  'callback',@(g,e)(self.convertButtonPressed()));
                              
      % sync the view with the model
      self.updateView();
    end  % constructor method

    % ---------------------------------------------------------------------
    function chooseProjectFileButtonPressed(self)
      [fileNameRel,pathName] = ...
        uigetfile({'*.mat','Matlab MAT files (*.mat)'}, ...
                  'Choose JAABA Project File');
      if fileNameRel == 0; return; end;
      fileNameAbs = fullfile(pathName,fileNameRel);
      self.projectFileName=fileNameAbs;
      self.projectFileSpecified=true;
      self.updateView();
    end
    
    % ---------------------------------------------------------------------
    function chooseClassifierFileButtonPressed(self)
      [fileNameRel,pathName] = ...
        uigetfile({'*.mat','Matlab MAT files (*.mat)'}, ...
                  'Choose JAABA Classifier File');
      if fileNameRel == 0; return; end;
      fileNameAbs = fullfile(pathName,fileNameRel);
      self.classifierFileName=fileNameAbs;
      self.classifierFileSpecified=true;
      self.updateView();
    end
    
    % ---------------------------------------------------------------------
    function gtExpDirsAddButtonPressed(self)
      [fileNameRel,pathName] = ...
        uigetfile({'*.jab','JAABA Everything Files (*.jab)'}, ...
                  'Add .jab file containing classifier to be used as input');
      if fileNameRel == 0; return; end;
      fileNameAbs = fullfile(pathName,fileNameRel);
      everythingParams = load(fileNameAbs,'-mat');
      if isempty(everythingParams.classifier)
        uiwait(errordlg(sprintf('%s does not contain a classifier.',fileNameRel), ...
                        'Error', ...
                        'modal'));
        return
      end
      % Check that the classifier has a time stamp
      classifier=everythingParams.classifier;
      if isfield(classifier,'timeStamp');
        timeStamp = classifier.timeStamp;
      else
        uiwait(errordlg('The classifier in the selected file lacks a timestamp.', ...
                        'Error', ...
                        'modal'));
        return
      end
      % Add the name of the score file (without the .mat extension)
      if isfield(classifier,'file') && isfield(classifier.file,'scorefilename')
        scoreFileName = classifier.scorefilename;
        [~,scoreBaseName] = fileparts(scoreFileName);
      elseif isfield(everythingParams,'behaviors') && ...
             isfield(everythingParams.behaviors,'names') && ...
             ~isempty(everythingParams.behaviors.names)
        behaviorName=everythingParams.behaviors.names{1};
        scoreBaseName = sprintf('scores_%s',behaviorName);
      else
        uiwait(errordlg('Unable to determine score file name for classifier.', ...
                        'Error', ...
                        'modal'));
        return
      end
      self.fileNameList{end+1}=fileNameAbs;
      self.timeStampList(end+1)=timeStamp;
      self.scoreBaseNameList{end+1}=scoreBaseName;
      self.iCurrentGTExpDir = length(self.fileNameList);
      self.updateView();
    end
    
    % ---------------------------------------------------------------------
    function gtExpDirsRemoveButtonPressed(self)
      i = self.iCurrentGTExpDir;
      if isempty(i), return; end
      nScoreFeatures=length(self.fileNameList);
      % delete the i'th entries
      self.fileNameList(i) = [];
      self.timeStampList(i) = [];
      self.scoreBaseNameList(i) = [];
      % update i if we just deleted the n'th element
      if (i==nScoreFeatures)
        i=fif(i>1,i-1,[]);
      end
      self.iCurrentGTExpDir=i;
      % Update the "view" to reflect the changed "model"
      self.updateView();      
    end
    
    % ---------------------------------------------------------------------
    function convertButtonPressed(self)
    end
    
    % ---------------------------------------------------------------------
    function updateView(self)
      % Update the "view" to reflect the current "model"
      
      % Update the project file text object
      if self.projectFileSpecified ,
        set(self.projectFileText, ...
            'String',self.projectFileName, ...
            'FontAngle','normal');
      else
        set(self.projectFileText, ...
            'String','Not specified', ...
            'FontAngle','italic');
      end
        
      % Update the classifier file text object
      if self.classifierFileSpecified ,
        set(self.classifierFileText, ...
            'String',self.classifierFileName, ...
            'FontAngle','normal');
      else
        set(self.classifierFileText, ...
            'String','Not specified', ...
            'FontAngle','italic');
      end
      
      % Update the GT experiment listbox
      set(self.gtExpDirsListbox,'String',self.gtExpDirNames);
      set(self.gtExpDirsListbox,'Value',self.iCurrentGTExpDir);

      % Update enablement of Remove button
      set(self.gtExpDirsRemoveButton,'enable',offIff(isempty(self.gtExpDirNames)));
      
      % Update enablement of convert button
      set(self.convertButton,'enable',onIff(self.projectFileSpecified));
    end  % method
    
  end
end
