function [success,problemdirs,msgs,expdirs] = CheckSetUpDir(varargin)

success = false;
problemdirs = {};
msgs = {};

persistent oldexpdirlist;
persistent oldrootdir;

if isempty(oldexpdirlist),
  oldexpdirlist = '';
end

if isempty(oldrootdir),
  if ismac,
    oldrootdir = '/Volumes';
  elseif ispc
    oldrootdir = 'Z:\';
  else
    oldrootdir = '';
  end
end

[expdirlist,rootdir,linuxroot,expdirs] = myparse(varargin,'expdirlist','','rootdir','','linuxroot','/groups/hantman/hantmanlab','expdirs',{});

if isempty(expdirs),
  
  if isempty(expdirlist),
    
    [f,p] = uigetfile('*.txt','Select experiment list generated by setUpDirUsingCluster',oldexpdirlist);
    
    if ~ischar(f),
      return;
    end
    
    expdirlist = fullfile(p,f);
    if ~exist(expdirlist,'file'),
      error('File %s does not exist',expdirlist);
    end
    
  end
  
  oldexpdirlist = expdirlist;
  
  fid = fopen(oldexpdirlist,'r');
  if fid < 1,
    error('Could not open file %s for reading',oldexpdirlist);
  end
  
  expdirs = {};
  while true,
    s = fgetl(fid);
    if ~ischar(s),
      break;
    end
    if isempty(s),
      continue;
    end
    expdirs{end+1} = s;
  end
end

if isempty(rootdir) && ~isempty(linuxroot),
  if ispc || ismac,
    res = uigetdir(oldrootdir,sprintf('OS change: what should we replace "%s" with?',linuxroot));
    
    if ~ischar(res),
      return;
    end
    
    rootdir = res;
    
  end
end

if ~isempty(rootdir) && ~exist(rootdir,'dir'),
  error('Directory %s does not exist',rootdir);
end

oldrootdir = rootdir;

for i = 1:numel(expdirs),
  
  oldexpdir = expdirs{i};
  m = regexp(oldexpdir,['^',linuxroot],'once','end');
  newexpdir = oldexpdir;
  if ~isempty(rootdir),
    if isempty(m),
      fprintf('No change made to directory %s, did not match linux root %s\n',oldexpdir,linuxroot);
    else
      if ispc,
        newexpdir = fullfile(rootdir,strrep(oldexpdir(m+1:end),'/','\'));
      else
        newexpdir = fullfile(rootdir,oldexpdir(m+1:end));
      end
    end
  end
  
  expdirs{i} = newexpdir;
  
end

if ~exist(expdirs{1},'dir'),
  res = questdlg(sprintf('Experiment directory %s does not exist, are you sure you have the right root directory? %s selected',expdirs{1},rootdir));
  if ~strcmpi(res,'yes'),
    return;
  end
end


for i = 1:numel(expdirs),
  
  [success1,msgs1] = CheckExpDir(expdirs{i});
  if ~success1,
    problemdirs{end+1} = expdirs{i};
    msgs{end+1} = msgs1;
    fprintf('\nProblem with %s:\n',expdirs{i});
    fprintf('  %s\n',msgs1{:});
    fprintf('\n');
  else
    fprintf('%s: SUCCESS!\n',expdirs{i});
  end
end

success = isempty(problemdirs);

%% go through errors

for i = 1:numel(problemdirs),
  
  if ~exist(problemdirs{i},'dir'),
    continue;
  end
  
  logfile = dir(fullfile(problemdirs{i},'genFea*.log'));
  if isempty(logfile),
    fprintf('No log file for directory %s\n',problemdirs{i});
    continue;
  end
  
  [~,order] = sort([logfile.datenum]);
  logfile = fullfile(problemdirs{i},logfile(order(end)).name);
  
  uiwait(popupmessage(logfile,sprintf('Log file for %s',problemdirs{i})));
  if i < numel(problemdirs),
    res = questdlg('See next log file?','See next log file?','Next','Done','Next');
    if strcmpi(res,'Done'),
      break;
    end
  end
end
